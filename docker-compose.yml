version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: todo_db_container
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: todo_backend
    ports:
      - "5000:5000"
    environment:
      PORT: 5000
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    depends_on:
      - db

  migrate:
    build:
      context: .
      dockerfile: backend/Dockerfile
    command: npx sequelize-cli db:migrate
    depends_on:
      - db
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_PORT: ${POSTGRES_PORT}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: todo_frontend
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:5000/api/todos
    depends_on:
      - backend

volumes:
  postgres_data:
